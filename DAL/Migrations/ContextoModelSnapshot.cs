// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Modelos.CarritoDAO", b =>
                {
                    b.Property<long>("id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_carrito"));

                    b.Property<int>("cant_carrito")
                        .HasColumnType("integer");

                    b.Property<long>("id_usuario")
                        .HasColumnType("bigint");

                    b.HasKey("id_carrito");

                    b.HasIndex("id_usuario")
                        .IsUnique();

                    b.ToTable("carritos", "gestion_logica_negocio");
                });

            modelBuilder.Entity("DAL.Modelos.CompraDAO", b =>
                {
                    b.Property<long>("id_compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_compra"));

                    b.Property<int>("cant_compra")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("fch_compra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("id_usuario")
                        .HasColumnType("bigint");

                    b.HasKey("id_compra");

                    b.HasIndex("id_usuario");

                    b.ToTable("compras", "gestion_logica_negocio");
                });

            modelBuilder.Entity("DAL.Modelos.ProductoDAO", b =>
                {
                    b.Property<long>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_producto"));

                    b.Property<int>("cant_producto")
                        .HasColumnType("integer");

                    b.Property<string>("desc_producto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("img_producto")
                        .HasColumnType("bytea");

                    b.Property<string>("nom_producto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("precio_producto")
                        .HasColumnType("double precision");

                    b.HasKey("id_producto");

                    b.ToTable("productos", "gestion_logica_negocio");
                });

            modelBuilder.Entity("DAL.Modelos.UsuarioDAO", b =>
                {
                    b.Property<long>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_usuario"));

                    b.Property<string>("clv_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("cuenta_confirmada")
                        .HasColumnType("boolean");

                    b.Property<string>("email_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("fch_expiracion_token")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("img_usuario")
                        .HasColumnType("text");

                    b.Property<string>("mvl_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nom_usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("rol_usuario")
                        .HasColumnType("text");

                    b.Property<string>("token_recuperacion")
                        .HasColumnType("text");

                    b.HasKey("id_usuario");

                    b.ToTable("usuarios", "gestion_usuarios");
                });

            modelBuilder.Entity("compras_productos", b =>
                {
                    b.Property<long>("id_producto")
                        .HasColumnType("bigint");

                    b.Property<long>("id_compra")
                        .HasColumnType("bigint");

                    b.HasKey("id_producto", "id_compra");

                    b.HasIndex("id_compra");

                    b.ToTable("compras_productos", "gestion_logica_negocio");
                });

            modelBuilder.Entity("productos_carritos", b =>
                {
                    b.Property<long>("id_carrito")
                        .HasColumnType("bigint");

                    b.Property<long>("id_producto")
                        .HasColumnType("bigint");

                    b.HasKey("id_carrito", "id_producto");

                    b.HasIndex("id_producto");

                    b.ToTable("productos_carritos", "gestion_logica_negocio");
                });

            modelBuilder.Entity("DAL.Modelos.CarritoDAO", b =>
                {
                    b.HasOne("DAL.Modelos.UsuarioDAO", "carrito_usuario_S")
                        .WithOne("usuario_carrito_P")
                        .HasForeignKey("DAL.Modelos.CarritoDAO", "id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carrito_usuario_S");
                });

            modelBuilder.Entity("DAL.Modelos.CompraDAO", b =>
                {
                    b.HasOne("DAL.Modelos.UsuarioDAO", "compras_usuario")
                        .WithMany("usuario_compras")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compras_usuario");
                });

            modelBuilder.Entity("compras_productos", b =>
                {
                    b.HasOne("DAL.Modelos.CompraDAO", null)
                        .WithMany()
                        .HasForeignKey("id_compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.ProductoDAO", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("productos_carritos", b =>
                {
                    b.HasOne("DAL.Modelos.CarritoDAO", null)
                        .WithMany()
                        .HasForeignKey("id_carrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Modelos.ProductoDAO", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Modelos.UsuarioDAO", b =>
                {
                    b.Navigation("usuario_carrito_P")
                        .IsRequired();

                    b.Navigation("usuario_compras");
                });
#pragma warning restore 612, 618
        }
    }
}
